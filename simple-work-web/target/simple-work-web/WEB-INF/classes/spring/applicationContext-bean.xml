<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--bean id="emailSender" class="com.jcloud.backend.workflow.common.email.EmailSender">
        <property name="username" value="${iaas.notice.email.usename}"/>
        <property name="password" value="${iaas.notice.email.password}"/>
        <property name="senderEmail" value="${iaas.notice.email.senderEmail}"/>
    </bean>

    <bean id="omdmConfig" class="com.jcloud.backend.workflow.common.vo.OmdmConfig">
        <property name="appCode" value="${omdm.appcode}"/>
        <property name="resetType" value="${omdm.reset.type}"/>
        <property name="businessId" value="${omdm.business.key}"/>
        <property name="safetyKey" value="${omdm.safety.key}"/>
    </bean-->

    <!--bean id="workshopService" class="com.ft.backend.work.service.impl.WorkshopServiceImpl"></bean-->


    <!--要调度的对象-->
    <bean id="jobBean" class="com.ft.backend.work.web.controller.TimedTask" />
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="jobBean" />
        <property name="targetMethod" value="execute" />
        <!--将并发设置为false-->
        <property name="concurrent" value="false" />
    </bean>

    <bean id="trigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobDetail" />
        <!--表达式，我的是每 30s 执行一次-->
        <property name="cronExpression" value="0/30 * * * * ?" />
    </bean>

    <!--  总管理类如果将lazy-init='false'那么容器启动就会执行调度程序   -->
    <bean id="startQuertz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false" >
        <property name="triggers">
            <list>
                <!--作业调度器,list下可加入其他的调度器-->
                <ref bean="trigger" />
            </list>
        </property>
    </bean>
</beans>